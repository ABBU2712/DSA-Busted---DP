#Given two strings A and B, find the minimum number of steps required to convert A to B. (each operation is counted as 1 step.)

#You have the following 3 operations permitted on a word:

#Insert a character
#Delete a character
#Replace a character
#Solution
def minDistance(self, A, B):

        dp = [[0 for _ in range(len(A)+1)] for _ in range(len(B)+1)]

        # # fill the values we know
        for i in range(len(dp[0])):
            dp[0][i] = i
        for i in range(len(dp)):
            dp[i][0] = i

        for two in range(1, len(dp)):
            for one in range(1, len(dp[0])):
                left = dp[two][one-1]  # delete
                top = dp[two-1][one]  # insert
                diagonal = dp[two-1][one-1]  # replace/skip

                if A[one-1] == B[two-1]:
                    dp[two][one] = dp[two-1][one-1]  # skip
                else:
                    dp[two][one] = min(left, top, diagonal) + 1

        return dp[-1][-1]
